local HttpService = game:GetService("HttpService")
local Players = game:GetService("Players")
local player = Players.LocalPlayer

local HttpRequest = syn and syn.request or http and http.request or http_request or request or httprequest
local serverURL = "http://154.26.132.109:3000/api/playerdata"

-- ฟังก์ชันเพื่อดึงข้อมูล Attributes ของผู้เล่น
local function getPlayerAttributes()
    local character = player.DisplayName or "ไม่พบข้อมูล"
    local level = player:GetAttribute("Level") or 0
    local traitRerolls = player:GetAttribute("TraitRerolls") or 0
    local gems = player:GetAttribute("Gems") or 0
    local gold = player:GetAttribute("Gold") or 0
    local placeId = game.PlaceId -- ดึงข้อมูล PlaceId

    return {
        character = character,
        level = level,
        traitRerolls = traitRerolls,
        gems = gems,
        gold = gold,
        pc = getgenv().Setting.PC,
        PlaceId = placeId -- ส่ง PlaceId ไปด้วย
    }
end

-- ฟังก์ชันเพื่อส่งข้อมูลไปยังเซิร์ฟเวอร์
local function sendToServer()
    local attributes = getPlayerAttributes()
    local jsonData = HttpService:JSONEncode(attributes)

    if HttpRequest then
        local response = HttpRequest({
            Url = serverURL,
            Method = "POST",
            Headers = {["Content-Type"] = "application/json"},
            Body = jsonData
        })

        if response.StatusCode == 200 or response.StatusCode == 201 then
            print("ส่งข้อมูลไปยังเซิร์ฟเวอร์สำเร็จ!")
        else
            print("การส่งข้อมูลไปยังเซิร์ฟเวอร์ล้มเหลว: " .. response.StatusCode .. " " .. response.StatusMessage)
        end
    else
        print("HttpRequest is not available.")
    end
end

-- เรียกใช้ฟังก์ชันเพื่อส่งข้อมูลไปยังเซิร์ฟเวอร์ทุก ๆ 1 นาที
while true do
    sendToServer()
    wait(60) -- ส่งข้อมูลทุกๆ 60 วินาที
end
